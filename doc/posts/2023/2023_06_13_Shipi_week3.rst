CTI Simulation and QTI tutorial : Week 3
========================================

.. post:: June 13 2023
    :author: Shilpi Prasad
    :tags: google
    :category: gsoc


What I did this week: 
_____________________
This week i worked on finishing the simulations with the appropriate documentation. I also worked on creating a general tutorial for cti/ qti as one doesn't already exist for qti. 
The idea behind this general tutorial was that there isn't any tutorial for advanced diffusion encoding.The closest documentation qti has is `here <https://dipy.org/documentation/1.7.0/examples_built/07_reconstruction/reconst_qti/#sphx-glr-examples-built-07-reconstruction-reconst-qti-py>`.However, there are several youtube videos. So, in this tutorial we started with simulating qti, and then we make things a little more complex by adding information on cti as qti can only handle a single gtab whereas cti can handle multiple gtabs.
This week I also started by initializing cti_tests.py file by adding relevant simulations to it. 


What Is coming up next week: 
____________________________
I intend on finishing the simulations with appropriate documentation and theory lines. If time permits, I'll resume working on the cti.py file and it's tests section.
The work on creating simulations is not entirely complete as it requires conversion of all .py files into rst so that it could be generated by sphinx. I also intend on making the tutorial more complete by maybe adding some more detail to it.
The major thing I intend on working on is the construction of the design_matrix for the cti model. 
In the context of diffusion MRI, a design matrix refers to a matrix that encodes the relationship between the data (diffusion-weighted signals) and the model parameters we want to estimate. It is essentially a way to map the model parameters to the observed data.
The design_matrix in case of cti captures more complex tissue microstructure information than either DTI or DKI or QTI.

Did I get stuck anywhere
________________________
No, I didn't get stuck. But implementing btensor value for cti simulation did require a bit of effort.
